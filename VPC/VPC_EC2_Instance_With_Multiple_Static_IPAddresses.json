{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Sample template showing how to create an instance with a single network\ninterface and multiple static IP addresses in an existing VPC. It assumes you\nhave already created a VPC.  **WARNING** This template creates an Amazon EC2\ninstance. You will be billed for the AWS resources used if you create a stack\nfrom this template.\n",
    "Metadata": {
        "License": "Apache-2.0"
    },
    "Parameters": {
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "InstanceType": {
            "Description": "WebServer EC2 instance type",
            "Type": "String",
            "Default": "t3.micro",
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "VpcId": {
            "Description": "VpcId of your existing Virtual Private Cloud (VPC)",
            "Type": "AWS::EC2::VPC::Id",
            "ConstraintDescription": "must be the VPC Id of an existing Virtual Private Cloud."
        },
        "SubnetId": {
            "Description": "SubnetId of an existing subnet (for the primary network) in your Virtual Private Cloud (VPC)",
            "Type": "AWS::EC2::Subnet::Id",
            "ConstraintDescription": "must be an existing subnet in the selected Virtual Private Cloud."
        },
        "PrimaryIPAddress": {
            "Description": "Primary private IP. This must be a valid IP address for Subnet",
            "Type": "String",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
            "ConstraintDescription": "must be a valid IP address of the form x.x.x.x."
        },
        "SecondaryIPAddress": {
            "Description": "Secondary private IP. This ust be a valid IP address for Subnet",
            "Type": "String",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
            "ConstraintDescription": "must be a valid IP address of the form x.x.x.x."
        },
        "SSHLocation": {
            "Description": "The IP address range that can be used to SSH to the EC2 instances",
            "Type": "String",
            "Default": "0.0.0.0/0",
            "MinLength": "9",
            "MaxLength": "18",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "LatestAMI": {
            "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
            "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
        }
    },
    "Resources": {
        "EIP1": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "EIPAssoc1": {
            "Type": "AWS::EC2::EIPAssociation",
            "Properties": {
                "NetworkInterfaceId": {
                    "Ref": "Eth0"
                },
                "AllocationId": {
                    "Fn::GetAtt": [
                        "EIP1",
                        "AllocationId"
                    ]
                }
            }
        },
        "SSHSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VpcId"
                },
                "GroupDescription": "Enable SSH access via port 22",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "SSHLocation"
                        }
                    }
                ]
            }
        },
        "EC2Instance": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "guard": {
                    "SuppressedRules": [
                        "EC2_INSTANCES_IN_VPC"
                    ]
                }
            },
            "Properties": {
                "ImageId": {
                    "Ref": "LatestAMI"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "Eth0"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "myInstance"
                    }
                ]
            }
        },
        "Eth0": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "Description": "eth0",
                "GroupSet": [
                    {
                        "Ref": "SSHSecurityGroup"
                    }
                ],
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": {
                            "Ref": "PrimaryIPAddress"
                        },
                        "Primary": "true"
                    },
                    {
                        "PrivateIpAddress": {
                            "Ref": "SecondaryIPAddress"
                        },
                        "Primary": "false"
                    }
                ],
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "SubnetId"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Interface 0"
                    },
                    {
                        "Key": "Interface",
                        "Value": "eth0"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "InstanceId": {
            "Description": "Instance Id of newly created instance",
            "Value": {
                "Ref": "EC2Instance"
            }
        },
        "EIP1": {
            "Description": "Primary public IP of Eth0",
            "Value": {
                "Fn::Join": [
                    " ",
                    [
                        "IP address",
                        {
                            "Ref": "EIP1"
                        },
                        "on subnet",
                        {
                            "Ref": "SubnetId"
                        }
                    ]
                ]
            }
        },
        "PrimaryPrivateIPAddress": {
            "Description": "Primary private IP address of Eth0",
            "Value": {
                "Fn::Join": [
                    " ",
                    [
                        "IP address",
                        {
                            "Fn::GetAtt": [
                                "Eth0",
                                "PrimaryPrivateIpAddress"
                            ]
                        },
                        "on subnet",
                        {
                            "Ref": "SubnetId"
                        }
                    ]
                ]
            }
        },
        "SecondaryPrivateIPAddresses": {
            "Description": "Secondary private IP address of Eth0",
            "Value": {
                "Fn::Join": [
                    " ",
                    [
                        "IP address",
                        {
                            "Fn::Select": [
                                0,
                                {
                                    "Fn::GetAtt": [
                                        "Eth0",
                                        "SecondaryPrivateIpAddresses"
                                    ]
                                }
                            ]
                        },
                        "on subnet",
                        {
                            "Ref": "SubnetId"
                        }
                    ]
                ]
            }
        }
    }
}
